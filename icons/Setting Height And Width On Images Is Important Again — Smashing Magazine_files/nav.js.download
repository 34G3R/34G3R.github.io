const init = () => {
  const mainHeader = document.querySelector('.main-header')
  const search = document.querySelector('.main-header #js-search-input')
  const container = document.querySelector('.main-nav')
  const primary = container.querySelector('.main-nav__primary')
  const secondaryContainer = document.querySelector('.secondary-nav')
  const secondary = secondaryContainer.querySelector('.main-nav__secondary')

  secondary.querySelectorAll('.nav-item-link').forEach(item => {
    item.tabIndex = '-1'
  })

  const moreLi = primary.querySelector('.main-nav-more-item')
  const moreBtn = moreLi.querySelector('.main-nav-more-item__button')

  search.addEventListener('blur', () => {
    mainHeader.classList.remove('searchFocused')
  })

  search.addEventListener('focus', () => {
    mainHeader.classList.add('searchFocused')
  })

  const showSecondary = () => {
    container.classList.toggle('js-show-secondary')
    secondaryContainer.classList.toggle('js-show-secondary')
    moreBtn.setAttribute(
      'aria-expanded',
      container.classList.contains('js-show-secondary')
    )
  }

  moreBtn.addEventListener('click', e => {
    e.preventDefault()
    showSecondary()
  })

  const getVisibleItems = items =>
    Array.from(items).filter(item => item.offsetParent !== null)

  const getActiveIndex = items => {
    const activeIndex = Array.from(items).findIndex(item => {
      if (
        item === document.activeElement ||
        item.contains(document.activeElement)
      ) {
        return true
      }
      return false
    })
    return activeIndex === -1 ? 0 : activeIndex
  }

  const getNextItem = items => {
    const visibleItems = getVisibleItems(items)
    const activeIndex = getActiveIndex(visibleItems)
    if (activeIndex + 1 < visibleItems.length) {
      return visibleItems[activeIndex + 1]
    }
    return moreBtn
  }

  const getPreviousItem = items => {
    const visibleItems = getVisibleItems(items)
    const activeIndex = getActiveIndex(visibleItems)
    if (activeIndex - 1 < 0) {
      return moreBtn
    }
    return visibleItems[activeIndex - 1]
  }

  document.addEventListener('keydown', e => {
    if (document.activeElement === moreBtn) {
      const items = getVisibleItems(primary.querySelectorAll('.nav-item-link'))
      const secondaryItems = getVisibleItems(
        secondary.querySelectorAll('.nav-item-link')
      )
      if (e.keyCode === 37) {
        // left arrow
        items[items.length - 1].focus()
      }
      if (e.keyCode === 39) {
        // right arrow
        items[0].focus()
      }
      if (e.keyCode === 40) {
        // down arrow
        e.preventDefault()
        if (container.classList.contains('js-show-secondary')) {
          secondaryItems[0].focus()
        } else {
          showSecondary()
        }
      }
      if (e.keyCode === 38) {
        // up arrow
        e.preventDefault()
        if (container.classList.contains('js-show-secondary')) {
          showSecondary()
        }
      }
    } else if (primary.contains(document.activeElement)) {
      const items = primary.querySelectorAll('.nav-item-link')
      if (e.keyCode === 37) {
        // left arrow
        getPreviousItem(items).focus()
      }
      if (e.keyCode === 39) {
        // right arrow
        getNextItem(items).focus()
      }
    } else if (secondary.contains(document.activeElement)) {
      const items = getVisibleItems(primary.querySelectorAll('.nav-item-link'))
      if (e.keyCode === 37) {
        // left arrow
        items[items.length - 1].focus()
      }
      if (e.keyCode === 39) {
        // right arrow
        items[0].focus()
      }

      const secondaryItems = secondary.querySelectorAll('.nav-item-link')
      if (e.keyCode === 38) {
        // up arrow
        e.preventDefault()
        getPreviousItem(secondaryItems).focus()
      }
      if (e.keyCode === 40) {
        // down arrow
        e.preventDefault()
        getNextItem(secondaryItems).focus()
      }
    }
  })

  // hide Secondary on the outside click
  document.addEventListener('click', e => {
    let el = e.target
    while (el) {
      if (el === moreBtn) {
        return
      }
      el = el.parentNode
    }
    container.classList.remove('js-show-secondary')
    secondaryContainer.classList.remove('js-show-secondary')
    moreBtn.setAttribute('aria-expanded', false)
  })

  document.body.classList.add('enhanced')
}

document.addEventListener('DOMContentLoaded', init)